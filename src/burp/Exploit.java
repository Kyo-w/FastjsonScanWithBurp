package burp;

import burp.data.RceData;
import burp.utils.Payload;
import com.sun.corba.se.impl.resolver.SplitLocalResolverImpl;

import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

public class Exploit implements Runnable {
    private BurpExtender burpExtender;
    private IBurpExtenderCallbacks callbacks;
    private IBurpCollaboratorClientContext clientContext;
    private List<String> headers;
    private IHttpService httpService;
    private String url;

    public Exploit(BurpExtender extender, IHttpService httpService, List<String>headers, String url) {
        burpExtender = extender;
        this.callbacks = extender.getCallbacks();
        this.headers = headers;
        this.httpService = httpService;
        clientContext = callbacks.createBurpCollaboratorClientContext();
        this.url = url;
    }
    public void run() {
        PrintWriter stdout = new PrintWriter(callbacks.getStdout(), true);
        stdout.println("开始描述");
        List<IBurpCollaboratorInteraction> dnslogResult = new ArrayList<>();
        String dnslog = clientContext.generatePayload(true);
        for(String payload : Payload.payloads){
            String formData = String.format(payload, dnslog);
            stdout.println(formData);
            byte[] bytesForm = callbacks.getHelpers().stringToBytes(formData);
            byte[] postMessage = callbacks.getHelpers().buildHttpMessage(headers, bytesForm);
            IHttpRequestResponse requestResponse = this.callbacks.makeHttpRequest(httpService, postMessage);
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            dnslogResult = clientContext.fetchCollaboratorInteractionsFor(dnslog);
            if(!dnslogResult.isEmpty()){
                stdout.println("存在漏洞");
                // 漏洞存在就更新表格中存在漏洞那一行的数据
                RceData data = new RceData(url, formData, requestResponse);
                synchronized (burpExtender.result) {
                    int row = burpExtender.result.size();
                    burpExtender.result.add(data);
                    burpExtender.fireTableRowsInserted(row,row);
                }
            }else{
                stdout.println("无漏洞");
            }
            stdout.println("扫描结束");
        }
    }
}
